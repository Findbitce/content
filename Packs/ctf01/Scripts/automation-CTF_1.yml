args:
- description: Enter the needed secret
  name: secret
- auto: PREDEFINED
  isArray: true
  name: question_ID
  predefined:
  - "01"
  - "02"
  - "03"
  - "04"
  - "05"
  - "06"
  - "07"
comment: This should provide answers to the CTF_1
commonfields:
  id: 83838c69-dd6b-48ac-85a1-f8b5cbd7757e
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: eeaf4848-d8c4-420e-889a-c131c119a4b7
    packName: CTF_01
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.9.42476
enabled: true
engineinfo: {}
mainengineinfo: {}
name: CTF_1
pswd: ""
runas: DBotWeakRole
runonce: false
script: |-
  register_module_line('CTF_Answers', 'start', __line__())
  import traceback




  GIF_URL = ''
  HTML_MESSAGE_1 = '''
  <img src="https://raw.githubusercontent.com/demisto/content/8b7d8c69aad403ae2158cf9798ce2661f5ed08ba/Packs/EscapeRoomTier1/images/incident_Simpsons.gif" alt="Robot">
  <div style='font-size:18px;'>
  Well Done!!!
  </div>
  '''

  answers = {
      "01" : ["2","two","02"],
      "02" : ["se_summit_2023","se summit 2023"],
      "03" : ["<none>","none","nothing"],
      "04" : ["epic query","epicquery"],
      "05" : ["reportsarecool"],
      "06" : ["monkey","baboon","ape","gorilla","lemor","chimpanzee","orangutan"],
      "07" : ["alt/option"]

  }

  HTML_MESSAGE_BAD = '''
  <img src="https://raw.githubusercontent.com/demisto/content/8b7d8c69aad403ae2158cf9798ce2661f5ed08ba/Packs/EscapeRoomTier1/images/incident_Simpsons.gif" alt="Error">
  <div style='font-size:18px;'>
  Nope!!! Try again.
  </div>
  '''

  # MAIN FUNCTION #


  def main():
      try:
          args = demisto.args()
          #__Error handeling when there is an empty secret or question id__
          if (args.get("secret") == None or args.get("question_ID") == None):
              return_error(f'Please specify Secret and Question ID to proceed with the challange')

          if (args.get("secret").lower() in answers[args.get("question_ID")]):
              return_results({
                  'ContentsFormat': EntryFormat.HTML,
                  'Type': EntryType.NOTE,
                  'Contents': HTML_MESSAGE_1,
                  })
          #General Error handeling
          else:
              if (args.get("question_ID") ==  "03"):
                  return_error(f'In case the playbook is in "Quite Mode", no output will be displayed in the war-room.\n\nYou can skip this task if you want or re-run it with <none> :). ')
              else:
                  return_error(f'Nope... try again!!!\nRemember to overwrite the "secret" argument when you are re-running the task :) ')
      except Exception as exc:  # pylint: disable=W0703
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute ERTokenReputation. Error: {str(exc)}')


  # ENTRY POINT #


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('CTF01_Task01', 'end', __line__())
scripttarget: 0
subtype: python3
tags: []
type: python
